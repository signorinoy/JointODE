[{"path":[]},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement meetziyang@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"http://gongziyang.com/JointODE/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"http://gongziyang.com/JointODE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Ziyang Gong Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://gongziyang.com/JointODE/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started","text":"JointODE package implements joint modeling longitudinal biomarker trajectories survival outcomes using ordinary differential equations (ODEs). approach captures complex biomarker dynamics accounting association event times.","code":""},{"path":"http://gongziyang.com/JointODE/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"","code":"# Install from GitHub devtools::install_github(\"signorinoy/JointODE\")  # Load the package library(JointODE)"},{"path":[]},{"path":"http://gongziyang.com/JointODE/articles/getting-started.html","id":"data-preparation","dir":"Articles","previous_headings":"Quick Start","what":"Data Preparation","title":"Getting Started","text":"package requires two data frames: Longitudinal data: Repeated biomarker measurements Survival data: Time--event outcomes","code":"# Example longitudinal data structure # id: subject identifier # time: measurement time # v: biomarker value head(longitudinal_data)  # Example survival data structure # id: subject identifier # time: observation time # status: event indicator (1=event, 0=censored) # w1, w2: baseline covariates head(survival_data)"},{"path":"http://gongziyang.com/JointODE/articles/getting-started.html","id":"model-fitting","dir":"Articles","previous_headings":"Quick Start","what":"Model Fitting","title":"Getting Started","text":"","code":"# Fit joint ODE model fit <- JointODE(   longitudinal_data = longitudinal_data,   survival_data = survival_data,   longitudinal_formula = v ~ 1,   survival_formula = Surv(time, status) ~ w1 + w2,   id = \"id\",   time = \"time\" )  # View results summary(fit)"},{"path":"http://gongziyang.com/JointODE/articles/getting-started.html","id":"model-diagnostics","dir":"Articles","previous_headings":"Quick Start","what":"Model Diagnostics","title":"Getting Started","text":"","code":"# Check convergence plot(fit, type = \"convergence\")  # Residual diagnostics plot(fit, type = \"residuals\")  # Fitted trajectories plot(fit, type = \"trajectories\", subjects = 1:6)"},{"path":"http://gongziyang.com/JointODE/articles/getting-started.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Getting Started","text":"See vignette(\"technical-details\") mathematical formulation See vignette(\"data-simulation\") generating synthetic data Check ?JointODE detailed function documentation","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Technical Details","text":"vignette describes mathematical framework computational implementation JointODE model, jointly models longitudinal biomarker trajectories survival outcomes coupled ordinary differential equation (ODE) system.","code":""},{"path":[]},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"state-variables","dir":"Articles","previous_headings":"Model Framework","what":"State Variables","title":"Technical Details","text":"model tracks three state variables subject : \\Lambda_i(t): Cumulative hazard m_i(t): Biomarker level \\dot{m}_i(t): Biomarker velocity (rate change)","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"ode-system","dir":"Articles","previous_headings":"Model Framework","what":"ODE System","title":"Technical Details","text":"state vector \\mathbf{s}_i(t) = (\\Lambda_i(t), m_i(t), \\dot{m}_i(t))^{\\top} evolves according : \\frac{d\\mathbf{s}_i}{dt} = \\begin{pmatrix} \\lambda_i(t|b_i) \\\\ \\dot{m}_i(t) \\\\ g(\\boldsymbol{\\beta}^{\\top}\\mathbf{Z}_i(t)) \\end{pmatrix} initial conditions \\mathbf{s}_i(0) = (0, m_{i0}, \\dot{m}_{i0})^{\\top}.","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"model-components","dir":"Articles","previous_headings":"Model Framework","what":"Model Components","title":"Technical Details","text":"Hazard Function: \\lambda_i(t|b_i) = \\exp\\left[\\boldsymbol{\\eta}^{\\top} \\mathbf{B}^{(\\lambda)}(t) + \\boldsymbol{\\alpha}^{\\top}\\mathbf{m}_i(t) + b_{} + \\mathbf{W}_i^{\\top}\\boldsymbol{\\phi}\\right] \\mathbf{B}^{(\\lambda)}(t): B-spline basis baseline hazard \\mathbf{m}_i(t) = (m_i(t), \\dot{m}_i(t), \\ddot{m}_i(t))^{\\top}: Biomarker features b_i: Subject-specific random effect \\mathbf{W}_i: Baseline covariates Acceleration Function: g(u) = \\boldsymbol{\\theta}^{\\top} \\mathbf{B}^{(g)}(u), \\quad u = \\boldsymbol{\\beta}^{\\top}\\mathbf{Z}_i(t) \\mathbf{B}^{(g)}(u): B-spline basis acceleration \\mathbf{Z}_i(t) = (m_i(t), \\dot{m}_i(t), \\mathbf{X}_i(t)^{\\top}, t)^{\\top}: Feature vector \\boldsymbol{\\beta}: Single-index coefficients (constrained: \\|\\boldsymbol{\\beta}\\| = 1)","code":""},{"path":[]},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"likelihood","dir":"Articles","previous_headings":"Statistical Inference","what":"Likelihood","title":"Technical Details","text":"joint likelihood subject integrates random effect: L_i(\\boldsymbol{\\Theta}) = \\int f(\\mathbf{V}_i | b_i) \\cdot f(T_i, \\delta_i | b_i) \\cdot f(b_i) \\, db_i \\boldsymbol{\\Theta} = (\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\boldsymbol{\\eta}, \\boldsymbol{\\alpha}, \\boldsymbol{\\phi}, \\sigma_e^2, \\sigma_b^2). Likelihood Components: Longitudinal: f(\\mathbf{V}_i | b_i) = \\prod_{j=1}^{n_i} \\mathcal{N}(V_{ij}; m_i(T_{ij}) + b_i, \\sigma_e^2) Survival: f(T_i, \\delta_i | b_i) = [\\lambda_i(T_i|b_i)]^{\\delta_i} \\exp[-\\Lambda_i(T_i|b_i)] Random Effect: f(b_i) \\sim \\mathcal{N}(0, \\sigma_b^2)","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"em-algorithm","dir":"Articles","previous_headings":"Statistical Inference","what":"EM Algorithm","title":"Technical Details","text":"use Expectation-Maximization (EM) algorithm parameter estimation.","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"e-step-posterior-computation","dir":"Articles","previous_headings":"Statistical Inference > EM Algorithm","what":"E-Step: Posterior Computation","title":"Technical Details","text":"subject , compute posterior distribution b_i given observed data \\mathcal{O}_i. Key simplification: hazard cumulative hazard factor : \\lambda_i(t|b_i) = e^{b_i} \\lambda_i(t|0) \\Lambda_i(t|b_i) = e^{b_i} \\Lambda_i(t|0) Implementation: Solve baseline ODE b_i = 0 obtain m_i(t), \\lambda_i(t|0), \\Lambda_i(T_i|0) Find posterior mode \\tilde{b}_i maximizing: \\ell_i(b) = b\\left[\\frac{S_i}{\\sigma_e^2} + \\delta_i\\right] - \\frac{b^2}{2}\\left[\\frac{n_i}{\\sigma_e^2} + \\frac{1}{\\sigma_b^2}\\right] - e^b\\Lambda_i(T_i|0) S_i = \\sum_j(V_{ij} - m_i(T_{ij})) Mean: \\hat{b}_i = E[b_i|\\mathcal{O}_i] Variance: \\hat{v}_i = \\text{Var}[b_i|\\mathcal{O}_i] Transform: E[e^{b_i}|\\mathcal{O}_i] survival updates","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"m-step-parameter-updates","dir":"Articles","previous_headings":"Statistical Inference > EM Algorithm","what":"M-Step: Parameter Updates","title":"Technical Details","text":"Maximize expected complete-data log-likelihood: Q(\\boldsymbol{\\Theta}) = Q_{\\text{long}} + Q_{\\text{surv}} + Q_{\\text{RE}} : Q_{\\text{long}} = -\\frac{1}{2\\sigma_e^2}\\sum_{,j} [(V_{ij} - m_i(T_{ij}) - \\hat{b}_i)^2 + \\hat{v}_i] - \\frac{N}{2}\\log(2\\pi\\sigma_e^2) Q_{\\text{surv}} = \\sum_i [\\delta_i(\\log\\lambda_i(T_i|0) + \\hat{b}_i) - E[e^{b_i}|\\mathcal{O}_i]\\Lambda_i(T_i|0)] Q_{\\text{RE}} = -\\frac{1}{2\\sigma_b^2}\\sum_i (\\hat{b}_i^2 + \\hat{v}_i) - \\frac{n}{2}\\log(2\\pi\\sigma_b^2) Optimization Strategy: Fix trajectory parameters Optimize via L-BFGS analytical gradients Alternating optimization constraint \\|\\boldsymbol{\\beta}\\| = 1 Fix \\boldsymbol{\\theta}, optimize \\boldsymbol{\\beta} Fix \\boldsymbol{\\beta}, optimize \\boldsymbol{\\theta} \\sigma_e^2 = \\frac{1}{N}\\sum_{,j}[(V_{ij} - m_i(T_{ij}) - \\hat{b}_i)^2 + \\hat{v}_i] \\sigma_b^2 = \\frac{1}{n}\\sum_i(\\hat{b}_i^2 + \\hat{v}_i)","code":""},{"path":[]},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"gradient-computation","dir":"Articles","previous_headings":"Computational Details","what":"Gradient Computation","title":"Technical Details","text":"Gradients require solving augmented ODE systems sensitivity equations. Base ODE System (ODE-1): \\frac{d}{dt}\\begin{bmatrix} \\Lambda \\\\ m \\\\ \\dot{m} \\\\ \\mathbf{}_B \\\\ \\mathbf{}_m \\end{bmatrix} = \\begin{bmatrix} \\lambda \\\\ \\dot{m} \\\\ g \\\\ \\mathbf{B}^{(\\lambda)} \\lambda \\\\ \\mathbf{m} \\lambda \\end{bmatrix} auxiliary integrals: \\mathbf{}_B(t) = \\int_0^t \\mathbf{B}^{(\\lambda)}(s)\\lambda(s)ds \\mathbf{}_m(t) = \\int_0^t \\mathbf{m}(s)\\lambda(s)ds Sensitivity Equations: \\boldsymbol{\\beta} optimization, add: \\frac{d\\mathbf{S}_\\beta}{dt} = \\mathbf{J} \\mathbf{S}_\\beta + \\begin{bmatrix}0 \\\\ \\boldsymbol{\\theta}^T\\mathbf{B}'_g(u) \\mathbf{Z}\\end{bmatrix} \\boldsymbol{\\theta} optimization, add: \\frac{d\\mathbf{S}_\\theta}{dt} = \\mathbf{J} \\mathbf{S}_\\theta + \\begin{bmatrix}0 \\\\ \\mathbf{B}_g(u)\\end{bmatrix} \\mathbf{J} = \\begin{bmatrix}0 & \\\\ 0 & 0\\end{bmatrix} shift operator.","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"gradient-formulas","dir":"Articles","previous_headings":"Computational Details","what":"Gradient Formulas","title":"Technical Details","text":"Direct hazard parameters: \\nabla_{\\boldsymbol{\\eta}} Q = \\sum_i [\\delta_i \\mathbf{B}^{(\\lambda)}(T_i) - E[e^{b_i}] \\mathbf{}_B(T_i)] \\nabla_{\\boldsymbol{\\alpha}} Q = \\sum_i [\\delta_i \\mathbf{m}_i(T_i) - E[e^{b_i}] \\mathbf{}_m(T_i)] \\nabla_{\\boldsymbol{\\phi}} Q = \\sum_i [\\delta_i - E[e^{b_i}]\\Lambda_i(T_i)] \\mathbf{W}_i Trajectory parameters: \\boldsymbol{\\beta} \\boldsymbol{\\theta} gradients longitudinal survival components: \\nabla Q = \\nabla Q_{\\text{long}} + \\nabla Q_{\\text{surv}} : Longitudinal: \\nabla Q_{\\text{long}} = \\frac{1}{\\sigma_e^2}\\sum_{,j} r_{ij} \\cdot \\frac{\\partial m_i(T_{ij})}{\\partial \\boldsymbol{\\cdot}} Survival: \\nabla Q_{\\text{surv}} = \\sum_i [\\delta_i \\frac{\\partial\\log\\lambda_i}{\\partial\\boldsymbol{\\cdot}} - E[e^{b_i}] \\frac{\\partial\\Lambda_i}{\\partial\\boldsymbol{\\cdot}}] residual r_{ij} = V_{ij} - m_i(T_{ij}) - \\hat{b}_i.","code":""},{"path":"http://gongziyang.com/JointODE/articles/technical-details.html","id":"convergence","dir":"Articles","previous_headings":"Computational Details","what":"Convergence","title":"Technical Details","text":"EM algorithm iterates relative change log-likelihood threshold: \\frac{|\\mathcal{L}^{(k+1)} - \\mathcal{L}^{(k)}|}{|\\mathcal{L}^{(k)}|} < \\epsilon","code":""},{"path":"http://gongziyang.com/JointODE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ziyang Gong. Author, maintainer.","code":""},{"path":"http://gongziyang.com/JointODE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gong Z (2025). JointODE: Joint Modeling Longitudinal Survival Data Using ODEs. R package version 0.0.0.9000, https://github.com/signorinoy/JointODE.","code":"@Manual{,   title = {JointODE: Joint Modeling of Longitudinal and Survival Data Using ODEs},   author = {Ziyang Gong},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/signorinoy/JointODE}, }"},{"path":"http://gongziyang.com/JointODE/index.html","id":"jointode","dir":"","previous_headings":"","what":"Joint Modeling of Longitudinal and Survival Data Using ODEs","title":"Joint Modeling of Longitudinal and Survival Data Using ODEs","text":"JointODE package provides unified framework joint modeling longitudinal biomarker measurements time--event outcomes using ordinary differential equations (ODEs). approach enables simultaneous analysis biomarker trajectories impact survival outcomes.","code":""},{"path":[]},{"path":"http://gongziyang.com/JointODE/index.html","id":"longitudinal-model","dir":"","previous_headings":"Model Setup","what":"Longitudinal Model","title":"Joint Modeling of Longitudinal and Survival Data Using ODEs","text":"observed biomarker measurements modeled : V_{ij}=m_i(T_{ij})+b_i+\\varepsilon_{ij},\\quad =1,\\ldots,n,\\quad j=1,\\ldots,n_i : V_{ij}: Observed biomarker value subject time T_{ij} m_i(t): True underlying biomarker trajectory b_i\\sim\\mathcal{N}(0,\\sigma_{b}^{2}): Subject-specific random intercept \\varepsilon_{ij}\\sim\\mathcal{N}(0,\\sigma_{e}^{2}): Measurement error biomarker trajectory evolution characterized following second-order differential equation: \\ddot{m}_i(t) = f\\big(m_i(t), \\dot{m}_i(t), \\mathbf{X}_i(t), t\\big) f: \\mathbb{R} \\times \\mathbb{R} \\times \\mathbb{R}^p \\times \\mathbb{R}^+ \\\\mathbb{R} smooth function modeling biomarker acceleration function current value m_i(t), velocity \\dot{m}_i(t), time-varying covariates \\mathbf{X}_i(t) \\\\mathbb{R}^p, time t.","code":""},{"path":"http://gongziyang.com/JointODE/index.html","id":"survival-model","dir":"","previous_headings":"Model Setup","what":"Survival Model","title":"Joint Modeling of Longitudinal and Survival Data Using ODEs","text":"hazard function incorporates biomarker dynamics: \\lambda_i(t) = \\lambda_{0}(t)\\exp\\left[\\mathbf{m}_i(t)^{\\top}\\boldsymbol{\\alpha}+\\mathbf{W}_i^{\\top}\\boldsymbol{\\phi}+b_{}\\right] : \\lambda_{0}(t): Baseline hazard (e.g., Weibull, piecewise constant) \\mathbf{m}_i(t)=\\left(m_i(t), \\dot{m}_i(t), \\ddot{m}_i(t)\\right)^{\\top}: Biomarker value derivatives \\boldsymbol{\\alpha}=(\\alpha_0, \\alpha_1, \\alpha_2)^{\\top}: Association parameters value, velocity, acceleration \\mathbf{W}_i: Baseline covariates coefficients \\boldsymbol{\\phi} b_i: Subject-specific random intercept detailed mathematical derivations including ODE formulation, likelihood construction, EM algorithm specifics, see technical documentation.","code":""},{"path":"http://gongziyang.com/JointODE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Joint Modeling of Longitudinal and Survival Data Using ODEs","text":"can install development version JointODE GitHub :","code":"# install.packages(\"pak\") pak::pak(\"signorinoy/JointODE\")"},{"path":"http://gongziyang.com/JointODE/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Joint Modeling of Longitudinal and Survival Data Using ODEs","text":"’s basic example demonstrating typical usage: Using README.Rmd instead README.md allows include executable R chunks: Remember render README.Rmd regularly keep README.md --date. Use devtools::build_readme() task. can also embed plots:  Remember commit push resulting figure files ensure display GitHub CRAN.","code":"library(JointODE) ## basic example code summary(cars) #>      speed           dist #>  Min.   : 4.0   Min.   :  2.00 #>  1st Qu.:12.0   1st Qu.: 26.00 #>  Median :15.0   Median : 36.00 #>  Mean   :15.4   Mean   : 42.98 #>  3rd Qu.:19.0   3rd Qu.: 56.00 #>  Max.   :25.0   Max.   :120.00"},{"path":"http://gongziyang.com/JointODE/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Joint Modeling of Longitudinal and Survival Data Using ODEs","text":"Please note JointODE project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"http://gongziyang.com/JointODE/reference/JointODE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"JointODE: Joint Modeling of Longitudinal and Survival Data Using ODEs — JointODE-package","title":"JointODE: Joint Modeling of Longitudinal and Survival Data Using ODEs — JointODE-package","text":"Implements joint modeling longitudinal biomarker trajectories time--event outcomes using ordinary differential equations (ODEs). package provides tools simultaneous analysis biomarker dynamics survival data, capturing complex temporal patterns ODE-based trajectory modeling accounting association event times shared random effects.","code":""},{"path":[]},{"path":"http://gongziyang.com/JointODE/reference/JointODE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"JointODE: Joint Modeling of Longitudinal and Survival Data Using ODEs — JointODE-package","text":"Maintainer: Ziyang Gong meetziyang@gmail.com","code":""},{"path":"http://gongziyang.com/JointODE/reference/JointODE.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","title":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","text":"Fits joint model simultaneously analyzes longitudinal biomarker trajectories time--event outcomes using ordinary differential equations (ODEs). approach captures complex temporal dynamics biomarker evolution quantifying association survival shared parameters.","code":""},{"path":"http://gongziyang.com/JointODE/reference/JointODE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","text":"","code":"JointODE(   longitudinal_formula,   longitudinal_data,   survival_formula,   survival_data,   id = \"id\",   time = \"time\",   spline_baseline = list(degree = 3, n_knots = 5, knot_placement = \"quantile\",     boundary_knots = NULL),   spline_index = list(degree = 3, n_knots = 4, knot_placement = \"quantile\",     boundary_knots = NULL),   control = list(),   ... )"},{"path":"http://gongziyang.com/JointODE/reference/JointODE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","text":"longitudinal_formula Formula longitudinal submodel. Left side specifies response; right side includes time covariates (e.g., v ~ x1). longitudinal_data Data frame containing longitudinal measurements. Must include multiple observations per subject columns subject ID, measurement times, response values. survival_formula Formula survival submodel. Must use Surv(time, status) left side; right side specifies baseline covariates. survival_data Data frame containing survival/event data. Must exactly one row per subject event time status. id Character string naming subject ID variable. Must exist datasets (default: \"id\"). time Character string naming time variable longitudinal data (default: \"time\"). spline_baseline List B-spline configuration baseline hazard: degree Degree B-spline basis (default: 3) n_knots Number interior knots (default: 5) knot_placement Method knot placement: \"quantile\" (based event times) \"equal\" (default: \"quantile\") boundary_knots Boundary knots, NULL uses event range (default: NULL) spline_index List B-spline configuration single index model: degree Degree B-spline basis (default: 3) n_knots Number interior knots (default: 4) knot_placement Method knot placement: \"quantile\" (based index values) \"equal\" (default: \"quantile\") boundary_knots Boundary knots, NULL uses index range (default: NULL) control List optimization control parameters: method Optimization algorithm (default: \"BFGS\") maxit Maximum iterations (default: 1000) tol Convergence tolerance (default: 1e-6) verbose Print progress (default: FALSE) ... Additional arguments passed fitting functions.","code":""},{"path":"http://gongziyang.com/JointODE/reference/JointODE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","text":"Object class \"JointODE\" containing: coefficients Estimated model parameters including longitudinal, survival, association parameters logLik Log-likelihood convergence AIC Akaike Information Criterion BIC Bayesian Information Criterion convergence Optimization convergence details fitted Fitted values submodels residuals Model residuals data Original input data call Matched function call","code":""},{"path":"http://gongziyang.com/JointODE/reference/JointODE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","text":"joint ODE model links longitudinal survival processes shared parameters. longitudinal trajectory modeled using ODEs capture non-linear dynamics, survival hazard incorporates features trajectory (level, slope, cumulative burden). Model estimation uses maximum likelihood numerical integration random effects via adaptive Gauss-Hermite quadrature.","code":""},{"path":"http://gongziyang.com/JointODE/reference/JointODE.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","text":"Input data automatically validated processed fitting. large datasets complex ODE systems, consider adjusting control parameters improve convergence.","code":""},{"path":"http://gongziyang.com/JointODE/reference/JointODE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Joint Model for Longitudinal and Survival Data Using ODEs — JointODE","text":"","code":"if (FALSE) { # \\dontrun{ sim <- simulate() fit <- JointODE(   longitudinal_formula = v ~ x1 + x2,   longitudinal_data = sim$longitudinal_data,   survival_formula = Surv(time, status) ~ w1 + w2,   survival_data = sim$survival_data ) summary(fit) } # }"},{"path":"http://gongziyang.com/JointODE/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Joint ODE Model Data — simulate","title":"Simulate Joint ODE Model Data — simulate","text":"Generates synthetic data joint ordinary differential equation (ODE) model couples longitudinal biomarker trajectories time--event outcomes. framework produces realistic clinical trial observational study data biomarker dynamics influence event hazards shared random effects trajectory features.","code":""},{"path":"http://gongziyang.com/JointODE/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Joint ODE Model Data — simulate","text":"","code":"simulate(   n = 50,   alpha = c(0.3, 0.1, -0.05),   beta = c(-0.3, -0.5, 0.2, 0.1, 0.05),   phi = c(0.2, -0.15),   weibull_shape = 1.5,   weibull_scale = 8,   sigma_b = 0.5,   sigma_e = 0.1,   seed = 42,   verbose = TRUE )"},{"path":"http://gongziyang.com/JointODE/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Joint ODE Model Data — simulate","text":"n Integer. Number subjects simulate (default: 50). alpha Numeric vector length 3. Association parameters linking trajectory features survival hazard: [value, velocity,   acceleration] (default: c(0.3, 0.1, -0.05)). beta Numeric vector length 5. ODE dynamics parameters controlling trajectory evolution: [position_feedback, damping, treatment_effect,   seasonal_effect, time_trend] (default: c(-0.3, -0.5, 0.2, 0.1, 0.05)). phi Numeric vector length 2. Baseline covariate effects survival hazard: [continuous_covariate, binary_covariate] (default: c(0.2, -0.15)). weibull_shape Numeric. Shape parameter (\\(\\kappa\\)) Weibull baseline hazard. Values > 1 indicate increasing hazard, < 1 decreasing (default: 1.5). weibull_scale Numeric. Scale parameter (\\(\\theta\\)) Weibull baseline hazard controlling time scale (default: 8). sigma_b Numeric. Standard deviation subject-specific random intercepts representing -subject heterogeneity (default: 0.5). sigma_e Numeric. Standard deviation measurement error longitudinal observations (default: 0.1). seed Integer. Random seed reproducibility (default: 42). verbose Logical. Print progress messages simulation (default: TRUE).","code":""},{"path":"http://gongziyang.com/JointODE/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Joint ODE Model Data — simulate","text":"list containing: longitudinal_data Data frame longitudinal measurements: id: Subject identifier time: Measurement time v: Observed biomarker value (latent + random effect + error) x1: Time-varying covariate 1 (treatment decay: \\(e^{-t/5}\\)) x2: Time-varying covariate 2 (seasonal: \\(0.2\\sin(2\\pi t)\\)) survival_data Data frame survival outcomes: id: Subject identifier time: Observed event/censoring time status: Event indicator (1 = event, 0 = censored) w1: Baseline continuous covariate ~ N(0,1) w2: Baseline binary covariate ~ Bernoulli(0.5)","code":""},{"path":"http://gongziyang.com/JointODE/reference/simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Joint ODE Model Data — simulate","text":"Model Framework simulation implements joint model two coupled components: 1. Longitudinal Model Biomarker evolution follows second-order nonlinear ODE: $$\\ddot{m}_i(t) = g(\\boldsymbol{\\beta}^T \\mathbf{Z}_i(t))$$ : \\(m_i(t)\\) latent biomarker trajectory subject \\(\\) \\(\\mathbf{Z}_i(t) = [m_i(t), \\dot{m}_i(t), X_1(t), X_2(t), t]^T\\) augmented state vector \\(g(u) = 0.5 \\tanh(u/3)\\) bounded nonlinear link function ensuring stability \\(\\boldsymbol{\\beta}\\) controls dynamics (feedback, damping, covariate effects) Observed measurements incorporate random effects error: $$V_{ij} = m_i(T_{ij}) + b_i + \\varepsilon_{ij}$$ \\(b_i \\sim N(0, \\sigma_b^2)\\) \\(\\varepsilon_{ij} \\sim N(0, \\sigma_e^2)\\). 2. Survival Model hazard function links trajectory dynamics event risk: $$\\lambda_i(t|b_i) = \\lambda_0(t) \\exp[\\boldsymbol{\\alpha}^T   \\mathbf{m}_i(t) + \\mathbf{W}_i^T \\boldsymbol{\\phi} + b_i]$$ : \\(\\lambda_0(t) = (\\kappa/\\theta)(t/\\theta)^{\\kappa-1}\\) Weibull baseline hazard \\(\\mathbf{m}_i(t) = [m_i(t), \\dot{m}_i(t), \\ddot{m}_i(t)]^T\\) captures trajectory features \\(\\mathbf{W}_i\\) baseline covariates \\(b_i\\) shared random effect linking models Simulation Process ODE Integration: Solve second-order ODE system subject using adaptive LSODA algorithm Survival Generation: Sample event times conditional hazard using simsurv package Censoring: Apply administrative censoring uniformly 50th 95th percentiles event times Longitudinal Sampling: Generate visit schedules (quarterly years 0-2, semi-annual thereafter) 10% random missingness Parameter Interpretation ODE parameters (beta): beta[1]: Negative feedback (homeostasis), typically < 0 beta[2]: Damping coefficient (stability), typically < 0 beta[3-5]: Covariate time effects Association (alpha): alpha[1]: Current value association (typically > 0 risk biomarkers) alpha[2]: Rate change association alpha[3]: Acceleration association (often < 0 stability)","code":""},{"path":"http://gongziyang.com/JointODE/reference/simulate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulate Joint ODE Model Data — simulate","text":"beta parameters normalized internally ensure model identifiability Visit schedules automatically adjust based follow-duration Setting verbose = FALSE suppresses progress messages","code":""},{"path":[]},{"path":"http://gongziyang.com/JointODE/reference/simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Joint ODE Model Data — simulate","text":"","code":"# Basic usage with default parameters sim <- simulate() #> Step 1/3: Generating ODE trajectories... #> Step 2/3: Generating survival times... #>   Achieved censoring: 28.0% #> Step 3/3: Generating longitudinal data... str(sim) #> List of 2 #>  $ longitudinal_data:'data.frame':\t666 obs. of  5 variables: #>   ..$ id  : int [1:666] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ time: num [1:666] 0 0.25 0.5 0.75 1 1.25 1.5 1.75 2 2.5 ... #>   ..$ v   : num [1:666] 0.767 0.572 0.643 0.669 0.724 ... #>   ..$ x1  : num [1:666] 1 0.951 0.905 0.861 0.819 ... #>   ..$ x2  : num [1:666] 0.00 2.00e-01 2.45e-17 -2.00e-01 -4.90e-17 ... #>  $ survival_data    :'data.frame':\t50 obs. of  5 variables: #>   ..$ id    : int [1:50] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ time  : num [1:50] 5.26 0.85 9.01 7.96 1.19 ... #>   ..$ status: int [1:50] 1 1 1 0 1 1 1 0 0 1 ... #>   ..$ w1    : num [1:50] -0.565 -1.105 1.512 -1.188 2.287 ... #>   ..$ w2    : num [1:50] 1 1 0 1 0 1 0 1 0 1 ...  # Check data characteristics cat(\"Event rate:\", mean(sim$survival_data$status), \"\\n\") #> Event rate: 0.72  cat(   \"Observations per subject:\",   nrow(sim$longitudinal_data) / nrow(sim$survival_data), \"\\n\" ) #> Observations per subject: 13.32   # Visualize trajectories with survival information library(ggplot2) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # Select subjects with different outcomes plot_data <- sim$longitudinal_data %>%   left_join(sim$survival_data[, c(\"id\", \"time\", \"status\")],     by = \"id\", suffix = c(\"\", \"_event\")   ) %>%   filter(id %in% sample(unique(id), 9))  ggplot(plot_data, aes(x = time, y = v)) +   geom_line(aes(color = factor(status)), alpha = 0.7) +   geom_point(aes(color = factor(status)), size = 1) +   geom_vline(aes(xintercept = time_event),     linetype = \"dashed\", alpha = 0.5   ) +   facet_wrap(~id, scales = \"free_y\", ncol = 3) +   scale_color_manual(     values = c(\"0\" = \"blue\", \"1\" = \"red\"), labels = c(\"Censored\", \"Event\")   ) +   theme_minimal() +   labs(     x = \"Time (years)\", y = \"Biomarker Value\", color = \"Outcome\",     title = \"Simulated Longitudinal Trajectories\"   )"},{"path":[]},{"path":"http://gongziyang.com/JointODE/news/index.html","id":"initial-release-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"JointODE 0.0.0.9000 (Development Version)","text":"Added basic package structure documentation Created data simulation vignette demonstrating intended modeling framework Included mathematical formulation technical details vignette Set testing infrastructure basic tests","code":""},{"path":"http://gongziyang.com/JointODE/news/index.html","id":"to-do-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"To Do","title":"JointODE 0.0.0.9000 (Development Version)","text":"Implement core estimation functions Add model fitting capabilities Include real data examples Expand test coverage","code":""}]
